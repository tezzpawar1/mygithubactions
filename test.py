import time
import schedule
from datetime import datetime
from selenium import webdriver
from selenium.webdriver import Keys
from selenium.webdriver.common.by import By


def compare_date():
    holiday_list = ["2024-01-01", "2024-01-26", "2024-08-15", "2024-10-02", "2024-10-31"]
    datetime.now().strftime("%Y-%m-%d")


def check_day():
    today = datetime.now()
    day_of_week = today.weekday()
    return day_of_week != 5 and day_of_week != 6 and not compare_date()


def test_method():
    if check_day():
        chrome_options = webdriver.ChromeOptions()
        chrome_options.add_argument(r'--user-data-dir=C:/Users/spa6a5t/AppData/Local/Google/Chrome/User Data/test1')
        driver = webdriver.Chrome(options=chrome_options)
        driver.get("https://web.whatsapp.com/")
        # driver.implicitly_wait(20)
        # element = driver.find_element(By.XPATH, "//div[@role='listitem']/descendant::span[@title='+91 99853 04064']")
        # element.click()
        # element = driver.find_element(By.XPATH, "//span[@data-icon='attach-menu-plus']")
        # element.click()
        # time.sleep(2)
        # btns = driver.find_elements(By.XPATH, "//li[@data-animate-dropdown-item]")
        # for btn in btns:
        #     if btn.text == "Poll":
        #         btn.click()
        #         break
        # today = datetime.now().strftime("%d-%b-%Y (%A)");
        # arr = [today, "Home", "Office", "Leave"]
        # for i in range(0, len(arr)):
        #     driver.find_element(By.XPATH, "(//p[contains(@class,'selectable-text')])[" + str(i + 1) + "]").send_keys(
        #         arr[i])
        #
        # driver.find_element(By.XPATH, "//input[@id='polls-single-option-switch']/following-sibling::div").click()
        # driver.find_element(By.XPATH, "//span[@data-icon='send']").click()
        # msgInput = driver.find_element(By.XPATH, "//div[@title='Type a message']")
        # msgInput.send_keys("**Generated by an Automated System**")
        # msgInput.send_keys(Keys.ENTER)


def test():
    print("testing")


# def add_summary_and_options(self):
#     summary = date_formatting()
#     arr = [summary, "Home", "Office", "Leave"]
#     for i, value in enumerate(arr):
#         self.driver.find_elements(By.XPATH, f"(//p[contains(@class,'selectable-text')])[{i + 1}]").send_keys(value)
#
#
# def date_formatting():
#     today = datetime.now()
#     return today.strftime("dd-MMMM-yyyy (EEEE)")

# current_time = datetime.now().strftime("%H:%M")
# schedule.every().day.at(current_time).do(test_method)

schedule.every(3).seconds.do(test)
# schedule.every().day.at("01:04").do(test)
while True:
    schedule.run_pending()
    time.sleep(1)
